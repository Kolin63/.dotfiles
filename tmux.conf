# Default Shell
set -g default-command 'exec bash'

# Rebind Leader from Ctrl B to Ctrl A
set -g prefix C-a
bind C-a send-prefix

# Increase History
set-option -g history-limit 5000

# Leader + R Reloads Config
bind r source-file ~/.dotfiles/tmux.conf \; display "Config Reloaded!"

# Detach
bind-key -r d detach

# Leader 0 to session 0 
bind 0 'a -t 0'

# Split Commands
bind-key s split-window -vc "#{pane_current_path}"
bind-key v split-window -hc "#{pane_current_path}"

# Keep Current Path When Making New Pane (Leader c)
bind c new-window -c "#{pane_current_path}"

# Vim Controls
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Sessionizer
bind-key -r f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"

# Escape Time for Vim
set -sg escape-time 5

# Clipboard Settings for Vim
set -g focus-events on

# 12 hour clock in status bar
set -g status-right "#[fg=black]%A, %d %b %Y %I:%M %p"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Edit values if you use custom resize_count variables
bind-key -n M-S-h if-shell "$is_vim" "send-keys M-S-h"  "resize-pane -L 10"
bind-key -n M-S-j if-shell "$is_vim" "send-keys M-S-j"  "resize-pane -D 5"
bind-key -n M-S-k if-shell "$is_vim" "send-keys M-S-k"  "resize-pane -U 5"
bind-key -n M-S-l if-shell "$is_vim" "send-keys M-S-l"  "resize-pane -R 10"

bind-key -T copy-mode-vi M-S-h resize-pane -L 10
bind-key -T copy-mode-vi M-S-j resize-pane -D 5
bind-key -T copy-mode-vi M-S-k resize-pane -U 5
bind-key -T copy-mode-vi M-S-l resize-pane -R 10

bind-key 'C-j' if-shell "$is_vim" send-keys 
